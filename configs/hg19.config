# This configuration file is used for Mouse/mm10
# Notice lowercase of names of sections and options will be used in python ConfigParser package.

[execute_steps]
# The following steps which are set as `True` will be excuted sequentially.
quality_contrl      = True
paired2single       = True
clean_reads         = True
read_mapping        = True
gene_quantify       = True
unmapped_remapping  = False
unmapped_requantify = False
summary_results     = True

[options]
# these OPTION/KEY can/will be override by command line options
# --input, -i	input data folder; Must contains paired-end fastq files whose name should match the regular expression of `SAMPLE_[rR]?[12].f(ast)?q(.gz)?` (SAMPLE list is included in file specified by -s option)
# --sample, -s	one SAMPLE per line in this file; Processing will be performed on those fastq files matching with `SAMPLE_[rR]?[12].f(ast)?q(.gz)?`;
# --output, -o	output folder; existed folders is not allowed.
# --thread, -p	run in parallel-mode if THREAD > 1
# [deprecated] --mismatch, -m	allowed mismatch number when splitting fastq according to cell barcodes, 1 is recommended.
# [deprecated] --minlength, -l	min length of retained reads when paired2single
# [deprecated] --barcode, -b	a file including those barcodes used for pooling single cells in Library preparation
# [deprecated] --reference, -x	prefix of hisat2 index files used for read_mapping
# [deprecated] --gtf, -f	annotation file in gene feature format (GFF/GTF), which will be used by htseq-count
# [deprecated] --re_reference, -X	same with -x, but used by remapping
# [deprecated] --re_gtf, -F	same with -f, but used by requantify
input         = ./raw_data
output        = ./out_smartliu
sample        = 
thread        = 12
mismatch      = 1
minlength     = 40
barcode       = 
tso           = TGGTATCAACGCAGAGTACAT
polya         = AAAAAAAAAAAAAAA
adaptor       = AGATCGGAAGAGC,GCTCTTCCGATCT
max_n         = 0.1
reference     = refgene
gtf           = refgenev3
re_reference  = cart19,cart22
re_gtf        = cart19,cart22
# Notice the value of OPTION/KEY `reference` from SECTION `options` should be either a OPTION/KEY from SECTION `reference` or a absolute path for reference-indexes. 
# Because here it used hisat2 for read_mapping, you could use hisat2-build to generate index files.

[reference] 
# the following OPTION/KEY is short for the corresponding VALUE, the prefix of index files which could be generated by hisat2-build.
genome  = /data1/Database/genome/fromTangLab/hg19/hg19_ERCC92_RGC
refgene = /data/database/strt_reference/hg19_ERCC92_RGC.refGene
gencode = /data1/Database/genome/fromTangLab/hg19/hg19_ERCC92_RGC.gencode
lncrna  = /data1/Database/genome/fromTangLab/hg19/hg19_ERCC92_RGC.gencode.lncRNA
cart19    = /data1/Database/genome/fromTangLab/hg19/CART19
cart22    = /data1/Database/genome/fromTangLab/hg19/CART22
[annotation]
refgene = /data1/Database/genome/fromTangLab/hg19/hg19_ERCC92_RGC.refGene.gtf
refgenev3 = /data/database/strt_reference/hg19_include_tcr_chrM.v3.gtf
gencode = /data1/Database/genome/fromTangLab/hg19/hg19_ERCC92_RGC.gencode.gtf
lncrna  = /data1/Database/genome/fromTangLab/hg19/hg19_ERCC92_RGC.gencode.lncRNA.gtf
cart19    = /data1/Database/genome/fromTangLab/hg19/CART19.gtf
cart22    = /data1/Database/genome/fromTangLab/hg19/CART22.gtf

[tools]
fastqc      = fastqc
cutadapt    = cutadapt
hisat2      = hisat2
samtools    = samtools
htseq-count = htseq-count
bam2fastx   = bam2fastx
bamtools    = bamtools
rscript     = Rscript
perl        = perl
multiqc     = multiqc
